import React, { useEffect, useRef } from 'react';

const InfiniteScroll = ({ loadMore, hasMore, isLoading, children, threshold = 300 }) => {
  const loaderRef = useRef(null);

  useEffect(() => {
    if (!hasMore || isLoading) return;

    const observer = new IntersectionObserver(
      (entries) => {
        if (entries[0].isIntersecting) {
          loadMore();
        }
      },
      {
        rootMargin: `${threshold}px`,
      }
    );

    if (loaderRef.current) {
      observer.observe(loaderRef.current);
    }

    return () => {
      if (loaderRef.current) {
        observer.unobserve(loaderRef.current);
      }
    };
  }, [hasMore, isLoading, loadMore, threshold]);

  return (
    <>
      {children}
      <div ref={loaderRef} />
      {isLoading && <p style={{ textAlign: 'center' }}>Loading more...</p>}
      {!hasMore && <p style={{ textAlign: 'center', color: 'gray' }}>No more items.</p>}
    </>
  );
};

export default InfiniteScroll;
